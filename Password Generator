import string
import random

def display_intro():
    print("🔐 Welcome to the Ultimate Password Generator 🔐\n")

def get_password_length():
    while True:
        try:
            length = int(input("Enter desired password length: "))
            if length <= 0:
                print("❌ Length must be greater than 0.")
            else:
                return length
        except ValueError:
            print("❌ Please enter a valid number.")

def get_character_pool():
    print('''\nChoose character sets to include in the password:
1. Letters (A-Z, a-z)
2. Digits (0-9)
3. Special Characters (!@#$%^&*...)
4. All of the above
5. Done selecting\n''')

    character_pool = ''
    while True:
        try:
            choice = int(input("Pick a number (1-5): "))
        except ValueError:
            print("❌ Please enter a valid number.")
            continue

        if choice == 1:
            character_pool += string.ascii_letters
            print("✔ Letters added.")
        elif choice == 2:
            character_pool += string.digits
            print("✔ Digits added.")
        elif choice == 3:
            character_pool += string.punctuation
            print("✔ Special characters added.")
        elif choice == 4:
            character_pool = string.ascii_letters + string.digits + string.punctuation
            print("✔ All character types selected.")
            break
        elif choice == 5:
            if not character_pool:
                print("⚠️ You must select at least one character type before proceeding.")
            else:
                break
        else:
            print("❌ Invalid choice. Please choose between 1 and 5.")
    return character_pool

def generate_password(length, pool):
    return ''.join(random.choice(pool) for _ in range(length))

def main():
    display_intro()
    length = get_password_length()
    pool = get_character_pool()
    password = generate_password(length, pool)
    print("\n✅ Your generated password is:\n" + password)

# Run the program
if __name__ == "__main__":
    main()
